{"version":3,"sources":["removeToDo.js"],"names":["del","document","getElementsByClassName","i","length","addEventListener","deleteListElement","parentElement","remove","console","log"],"mappings":"AAAA,IAAMA,GAAG,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,CAAZ,EAEA;;AACA,KAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,GAAG,CAACI,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC/BH,EAAAA,GAAG,CAACG,CAAD,CAAH,CAAOE,gBAAP,CAAwB,OAAxB,EAAiCC,iBAAjC;AACD;;AAED,SAASA,iBAAT,GAA6B;AAC3B,OAAKC,aAAL,CAAmBC,MAAnB,GAD2B,CACE;;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,EAED;AACA;AACA","file":"removeToDo.dcff6442.js","sourceRoot":"..","sourcesContent":["const del = document.getElementsByClassName(\"delete\");\n\n// register actions initially on existing elements\nfor (i = 0; i < del.length; i++) {\n  del[i].addEventListener(\"click\", deleteListElement);\n}\n\nfunction deleteListElement() {\n  this.parentElement.remove(); // remove parent, since button is child\n  console.log(this);\n}\n\n// for문으로 사용 했을 때, 제가 원하는 요소들만 지워지는 이유가 무엇인가요?? 루프가 이해가 안됩니다.\n// 추측으로는, 페이지가 로드 될 때, 이미 있는 것들을 차례대로 0번부터 1,2,3...이렇게 마치 유사배열 요소들처럼 보입니다.\n// 어느 시점에 함수가 돌아 가는지, html이 어떻게 돌아가는지도 알아야 하는거 같은데 맞나요?\n"]}