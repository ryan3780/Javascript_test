{"id":"removeToDo.js","dependencies":[{"name":"/Users/admin/Desktop/JS_works/package.json","includedInParent":true,"mtime":1571042980407}],"generated":{"js":"var del = document.getElementsByClassName(\"delete\"); // register actions initially on existing elements\n\nfor (i = 0; i < del.length; i++) {\n  del[i].addEventListener(\"click\", deleteListElement);\n}\n\nfunction deleteListElement() {\n  this.parentElement.remove(); // remove parent, since button is child\n\n  console.log(this);\n} // for문으로 사용 했을 때, 제가 원하는 요소들만 지워지는 이유가 무엇인가요?? 루프가 이해가 안됩니다.\n// 추측으로는, 페이지가 로드 될 때, 이미 있는 것들을 차례대로 0번부터 1,2,3...이렇게 마치 유사배열 요소들처럼 보입니다.\n// 어느 시점에 함수가 돌아 가는지, html이 어떻게 돌아가는지도 알아야 하는거 같은데 맞나요?"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"removeToDo.js","original":{"line":1,"column":0}},{"name":"del","generated":{"line":1,"column":4},"source":"removeToDo.js","original":{"line":1,"column":6}},{"generated":{"line":1,"column":7},"source":"removeToDo.js","original":{"line":1,"column":9}},{"name":"document","generated":{"line":1,"column":10},"source":"removeToDo.js","original":{"line":1,"column":12}},{"generated":{"line":1,"column":18},"source":"removeToDo.js","original":{"line":1,"column":20}},{"name":"getElementsByClassName","generated":{"line":1,"column":19},"source":"removeToDo.js","original":{"line":1,"column":21}},{"generated":{"line":1,"column":41},"source":"removeToDo.js","original":{"line":1,"column":12}},{"generated":{"line":1,"column":42},"source":"removeToDo.js","original":{"line":1,"column":44}},{"generated":{"line":1,"column":50},"source":"removeToDo.js","original":{"line":1,"column":12}},{"generated":{"line":1,"column":51},"source":"removeToDo.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":53},"source":"removeToDo.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":0},"source":"removeToDo.js","original":{"line":4,"column":0}},{"name":"i","generated":{"line":3,"column":5},"source":"removeToDo.js","original":{"line":4,"column":5}},{"generated":{"line":3,"column":6},"source":"removeToDo.js","original":{"line":4,"column":6}},{"generated":{"line":3,"column":9},"source":"removeToDo.js","original":{"line":4,"column":9}},{"generated":{"line":3,"column":10},"source":"removeToDo.js","original":{"line":4,"column":0}},{"name":"i","generated":{"line":3,"column":12},"source":"removeToDo.js","original":{"line":4,"column":12}},{"generated":{"line":3,"column":13},"source":"removeToDo.js","original":{"line":4,"column":13}},{"name":"del","generated":{"line":3,"column":16},"source":"removeToDo.js","original":{"line":4,"column":16}},{"generated":{"line":3,"column":19},"source":"removeToDo.js","original":{"line":4,"column":19}},{"name":"length","generated":{"line":3,"column":20},"source":"removeToDo.js","original":{"line":4,"column":20}},{"generated":{"line":3,"column":26},"source":"removeToDo.js","original":{"line":4,"column":0}},{"name":"i","generated":{"line":3,"column":28},"source":"removeToDo.js","original":{"line":4,"column":28}},{"generated":{"line":3,"column":29},"source":"removeToDo.js","original":{"line":4,"column":29}},{"generated":{"line":3,"column":31},"source":"removeToDo.js","original":{"line":4,"column":0}},{"generated":{"line":3,"column":33},"source":"removeToDo.js","original":{"line":4,"column":33}},{"name":"del","generated":{"line":4,"column":0},"source":"removeToDo.js","original":{"line":5,"column":2}},{"name":"del","generated":{"line":4,"column":2},"source":"removeToDo.js","original":{"line":5,"column":2}},{"generated":{"line":4,"column":5},"source":"removeToDo.js","original":{"line":5,"column":5}},{"name":"i","generated":{"line":4,"column":6},"source":"removeToDo.js","original":{"line":5,"column":6}},{"generated":{"line":4,"column":7},"source":"removeToDo.js","original":{"line":5,"column":5}},{"generated":{"line":4,"column":8},"source":"removeToDo.js","original":{"line":5,"column":2}},{"name":"addEventListener","generated":{"line":4,"column":9},"source":"removeToDo.js","original":{"line":5,"column":9}},{"generated":{"line":4,"column":25},"source":"removeToDo.js","original":{"line":5,"column":2}},{"generated":{"line":4,"column":26},"source":"removeToDo.js","original":{"line":5,"column":26}},{"generated":{"line":4,"column":33},"source":"removeToDo.js","original":{"line":5,"column":2}},{"name":"deleteListElement","generated":{"line":4,"column":35},"source":"removeToDo.js","original":{"line":5,"column":35}},{"generated":{"line":4,"column":52},"source":"removeToDo.js","original":{"line":5,"column":2}},{"generated":{"line":5,"column":0},"source":"removeToDo.js","original":{"line":6,"column":1}},{"generated":{"line":7,"column":0},"source":"removeToDo.js","original":{"line":8,"column":0}},{"name":"deleteListElement","generated":{"line":7,"column":9},"source":"removeToDo.js","original":{"line":8,"column":9}},{"generated":{"line":7,"column":26},"source":"removeToDo.js","original":{"line":8,"column":0}},{"generated":{"line":7,"column":29},"source":"removeToDo.js","original":{"line":8,"column":29}},{"generated":{"line":8,"column":0},"source":"removeToDo.js","original":{"line":9,"column":2}},{"name":"parentElement","generated":{"line":8,"column":7},"source":"removeToDo.js","original":{"line":9,"column":7}},{"generated":{"line":8,"column":20},"source":"removeToDo.js","original":{"line":9,"column":2}},{"name":"remove","generated":{"line":8,"column":21},"source":"removeToDo.js","original":{"line":9,"column":21}},{"generated":{"line":8,"column":27},"source":"removeToDo.js","original":{"line":9,"column":2}},{"generated":{"line":8,"column":30},"source":"removeToDo.js","original":{"line":8,"column":29}},{"generated":{"line":8,"column":31},"source":"removeToDo.js","original":{"line":9,"column":31}},{"name":"console","generated":{"line":10,"column":0},"source":"removeToDo.js","original":{"line":10,"column":2}},{"name":"console","generated":{"line":10,"column":2},"source":"removeToDo.js","original":{"line":10,"column":2}},{"generated":{"line":10,"column":9},"source":"removeToDo.js","original":{"line":10,"column":9}},{"name":"log","generated":{"line":10,"column":10},"source":"removeToDo.js","original":{"line":10,"column":10}},{"generated":{"line":10,"column":13},"source":"removeToDo.js","original":{"line":10,"column":2}},{"generated":{"line":10,"column":14},"source":"removeToDo.js","original":{"line":10,"column":14}},{"generated":{"line":10,"column":18},"source":"removeToDo.js","original":{"line":10,"column":2}},{"generated":{"line":11,"column":0},"source":"removeToDo.js","original":{"line":11,"column":1}},{"generated":{"line":11,"column":2},"source":"removeToDo.js","original":{"line":13,"column":0}},{"generated":{"line":12,"column":0},"source":"removeToDo.js","original":{"line":14,"column":0}},{"generated":{"line":13,"column":0},"source":"removeToDo.js","original":{"line":15,"column":0}}],"sources":{"removeToDo.js":"const del = document.getElementsByClassName(\"delete\");\n\n// register actions initially on existing elements\nfor (i = 0; i < del.length; i++) {\n  del[i].addEventListener(\"click\", deleteListElement);\n}\n\nfunction deleteListElement() {\n  this.parentElement.remove(); // remove parent, since button is child\n  console.log(this);\n}\n\n// for문으로 사용 했을 때, 제가 원하는 요소들만 지워지는 이유가 무엇인가요?? 루프가 이해가 안됩니다.\n// 추측으로는, 페이지가 로드 될 때, 이미 있는 것들을 차례대로 0번부터 1,2,3...이렇게 마치 유사배열 요소들처럼 보입니다.\n// 어느 시점에 함수가 돌아 가는지, html이 어떻게 돌아가는지도 알아야 하는거 같은데 맞나요?\n"},"lineCount":null}},"error":null,"hash":"be171d53ee493f89d1edc3fbed537b61","cacheData":{"env":{}}}